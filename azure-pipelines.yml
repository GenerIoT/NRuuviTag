trigger:
  branches:
    include:
      - main  # all branches
  paths:
    exclude:
      - '**/*.md'
      - 'docs/*'
      - '.gitignore'
      - '.gitattributes'
      - '.gitmodules'
      - '.editorconfig'
      - 'LICENSE*'
      - 'THIRD-PARTY-NOTICES.md'

pr:
  branches:
    include:
      - main
      - master
  paths:
    exclude:
      - '**/*.md'
      - 'docs/*'
      - '.gitignore'
      - '.gitattributes'
      - '.gitmodules'
      - '.editorconfig'
      - 'LICENSE*'
      - 'THIRD-PARTY-NOTICES.md'

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: TARGET_BRANCH
    value: main
  - name: CAKE_VERSION
    value: 1.1.0
  - name: BUILD_CONFIGURATION
    value: Release

  - name: REGISTRY
    value: $(CONTAINER_REGISTRY)
  - name: USERNAME
    value: $(AZ_NRUUVITAG_USERNAME)
  - name: PASSWORD
    value: $(AZ_NRUUVITAG_PASS)
  - name: IMAGE_NAME
    value: $(CONTAINER_IMAGE_NAME)
  - name: AZURE_DEVOPS_PAT
    value: $(AZ_DEVOPS_PAT)

stages:
  - stage: BuildAndTest
    displayName: "Build and Test"
    condition: always()
    jobs: 
      - template: templates/build-test.yml
    

  - stage: VersionBump
    displayName: "Version Bump"
    dependsOn: BuildAndTest
    condition: and(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.Reason'], 'IndividualCI'))
    jobs:
      - template: templates/version-bump.yml

  - stage: Container
    displayName: "Build and Push Container"
    dependsOn: VersionBump
    condition: and(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.Reason'], 'IndividualCI'))
    variables:
      VERSION: $[ stageDependencies.VersionBump.version_bump.outputs['SetVersion.version'] ]
    jobs:
      - template: templates/build-push-container.yml
  
  - stage: iot-hub-deployment 
    displayName: "IoT Hub Deployment"
    dependsOn: [Container, VersionBump]
    condition: and(succeeded('VersionBump'), succeeded('ContainerBuild'))
    variables:
      VERSION: $[ stageDependencies.VersionBump.version_bump.outputs['SetVersion.version'] ]
    jobs: 
      - template: templates/iot-hub-deployment.yml

  - stage: SyncRepo
    displayName: "Sync to GitHub"
    dependsOn: iot-hub-deployment
    condition: always()
    jobs: 
      - template: templates/repo-sync.yml


