using System;
using System.Collections.Generic;
using System.Text;

namespace NRuuviTag.Mqtt {

    /// <summary>
    /// Options for <see cref="MqttBridge"/>.
    /// </summary>
    public class MqttBridgeOptions {

        /// <summary>
        /// Broker hostname.
        /// </summary>
        public string Hostname { get; set; } = "localhost";

        /// <summary>
        /// Broker port number.
        /// </summary>
        public ushort? Port { get; set; }

        public bool UseTls { get; set; } = true;

        public string ClientId { get; set; } = Guid.NewGuid().ToString("N");

        public string? UserName { get; set; }

        public string? Password { get; set; }

        public MQTTnet.Formatter.MqttProtocolVersion ProtocolVersion { get; set; } = MQTTnet.Formatter.MqttProtocolVersion.V500;

        /// <summary>
        /// The publishing type for the <see cref="MqttBridge"/>.
        /// </summary>
        public PublishType PublishType { get; set; }

        /// <summary>
        /// The channel that MQTT messages will be published to. When <see cref="PublishType"/> is 
        /// <see cref="PublishType.ChannelPerMeasurement"/>, the <see cref="PublishChannel"/> is 
        /// used as a prefix for the individual measurement channels.
        /// </summary>
        /// <remarks>
        ///   The <c>{deviceId}</c> placeholder will be replaced at runtime with the device ID for 
        ///   the sample that is being published. The <see cref="GetDeviceId"/> callback can be 
        ///   used to define the device ID to use for a given <see cref="RuuviTagSample"/>.
        /// </remarks>
        public string PublishChannel { get; set; } = "devices/{deviceId}";

        /// <summary>
        /// A callback that can be used to generate the device ID to use for a given 
        /// <see cref="RuuviTagSample"/> object.
        /// </summary>
        /// <remarks>
        ///   If <see cref="GetDeviceId"/> is <see langword="null"/>, the device ID will be 
        ///   generated by hashing the <see cref="RuuviTagSample.MacAddress"/> property for an 
        ///   incoming sample.
        /// </remarks>
        public Func<RuuviTagSample, string>? GetDeviceId { get; set; }

    }

}
